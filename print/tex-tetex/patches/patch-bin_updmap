$NetBSD: patch-bin_updmap,v 1.2 2012/07/22 20:24:42 minskim Exp $

--- bin/updmap.orig	2012-06-10 22:43:00.000000000 +0000
+++ bin/updmap
@@ -23,7 +23,7 @@ my $TEXMFROOT;
 
 BEGIN {
   $^W=1;
-  $TEXMFROOT = `kpsewhich -var-value=TEXMFROOT`;
+  $TEXMFROOT = `@KPSEWHICH@ -var-value=TEXMFROOT`;
   if ($?) {
     print STDERR "updmap: Cannot find TEXMFROOT, aborting!\n";
     exit 1;
@@ -50,9 +50,9 @@ use TeXLive::TLUtils qw(mkdirhier mktexu
 # this function checks by itself whether it is running on windows or not
 reset_root_home();
 
-chomp(my $TEXMFMAIN = `kpsewhich --var-value=TEXMFMAIN`);
-chomp(my $TEXMFVAR = `kpsewhich -var-value=TEXMFVAR`);
-chomp(my $TEXMFCONFIG = `kpsewhich -var-value=TEXMFCONFIG`);
+chomp(my $TEXMFMAIN = `@KPSEWHICH@ --var-value=TEXMFMAIN`);
+chomp(my $TEXMFVAR = `@KPSEWHICH@ -var-value=TEXMFVAR`);
+chomp(my $TEXMFCONFIG = `@KPSEWHICH@ -var-value=TEXMFCONFIG`);
 
 # make sure that on windows *everything* is in lower case for comparison
 if (win32()) {
@@ -213,15 +213,15 @@ sub main {
     # in the list is the one where changes will be written to.
     ($changes_config_file) = @{$opts{'cnffile'}};
   } else {
-    my @all_files = `kpsewhich -all updmap.cfg`;
+    my @all_files = `@KPSEWHICH@ -all updmap.cfg`;
     chomp(@all_files);
     my @used_files;
     for my $f (@all_files) {
       push @used_files, (win32() ? lc($f) : $f);
     }
     #
-    chomp(my $TEXMFLOCAL =`kpsewhich --var-value=TEXMFLOCAL`);
-    chomp(my $TEXMFHOME =`kpsewhich --var-value=TEXMFHOME`);
+    chomp(my $TEXMFLOCAL =`@KPSEWHICH@ --var-value=TEXMFLOCAL`);
+    chomp(my $TEXMFHOME =`@KPSEWHICH@ --var-value=TEXMFHOME`);
     if (win32()) {
       $TEXMFLOCAL = lc($TEXMFLOCAL);
       $TEXMFHOME = lc($TEXMFHOME);
@@ -1140,7 +1140,7 @@ sub mkMaps {
 
 sub locateMap {
   my $map = shift;
-  my $ret = `kpsewhich --format=map $map`;
+  my $ret = `@KPSEWHICH@ --format=map $map`;
   chomp($ret);
   return $ret;
 }
@@ -1788,7 +1788,7 @@ sub read_map_files {
     $alldata->{'maps'}{$m}{'status'} = 'enabled';
   }
   @maps = sort_uniq(@maps);
-  my @fullpath = `kpsewhich --format=map @maps`;
+  my @fullpath = `@KPSEWHICH@ --format=map @maps`;
   chomp @fullpath;
   foreach my $map (@maps) {
     my ($ff) = grep /\/$map(\.map)?$/, @fullpath;
